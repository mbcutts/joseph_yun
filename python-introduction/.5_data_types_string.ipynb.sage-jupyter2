{"backend_state":"running","connection_file":"/projects/f5f38597-12ca-4603-94d4-a86293c3f1cc/.local/share/jupyter/runtime/kernel-118a4839-840d-486e-a354-8348b74d383b.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1633297419468,"exec_count":2,"id":"47449f","input":"strip_str = '   some spaces    '","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":27,"start":1633297419461,"state":"done","type":"cell"}
{"cell_type":"code","end":1633297429608,"exec_count":4,"id":"709bdf","input":"#strip_str.strip() # try the functions lstrip, rstrip\nstrip_str.rstrip()","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'   some spaces'"},"exec_count":4}},"pos":28,"start":1633297429599,"state":"done","type":"cell"}
{"cell_type":"code","end":1633297440475,"exec_count":5,"id":"922738","input":"strip_str = \"split a long phrase, with a lot of words!\"","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":29,"start":1633297440468,"state":"done","type":"cell"}
{"cell_type":"code","end":1633297443765,"exec_count":6,"id":"fe56c8","input":"strip_str.split()  # specify with character should be use to split the string, the default is ' '","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['split', 'a', 'long', 'phrase,', 'with', 'a', 'lot', 'of', 'words!']"},"exec_count":6}},"pos":30,"start":1633297443758,"state":"done","type":"cell"}
{"cell_type":"code","end":1633297447767,"exec_count":7,"id":"9dcb2e","input":"strip_str.lower()\n\n","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'split a long phrase, with a lot of words!'"},"exec_count":7}},"pos":31,"start":1633297447760,"state":"done","type":"cell"}
{"cell_type":"code","end":1633297470930,"exec_count":8,"id":"1fe4c5","input":"import math\nfirst_name = 'James'\nlast_name = 'Bond'\nyear_birth = 1980\nfavorite_number = math.pi","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":33,"start":1633297470924,"state":"done","type":"cell"}
{"cell_type":"code","end":1633297473001,"exec_count":9,"id":"327253","input":"'My name is ' + last_name + ', ' + first_name + ' ' + last_name + '. I was born in ' + year_birth + ', my favorite number is ' + favorite_number","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"ename":"TypeError","evalue":"can only concatenate str (not \"int\") to str","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_505295/698702009.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m'My name is '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mlast_name\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m', '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mfirst_name\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m' '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mlast_name\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'. I was born in '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0myear_birth\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m', my favorite number is '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mfavorite_number\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: can only concatenate str (not \"int\") to str"]}},"pos":34,"start":1633297472993,"state":"done","type":"cell"}
{"cell_type":"code","end":1633299147232,"exec_count":15,"id":"4751d8","input":"# Order from the variables matter\nquote = 'My name is {}, {} {}. I was born in {}, my favorite number is {}. My name is {} {}.'\n\nquote.format(\n    last_name, # 0\n    first_name, # 1\n    last_name, # 2\n    year_birth, # 3\n    favorite_number, # 4\n    first_name,\n    last_name\n)","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'My name is Bond, James Bond. I was born in 1980, my favorite number is 3.141592653589793. My name is James Bond.'"},"exec_count":15}},"pos":40,"start":1633299147225,"state":"done","type":"cell"}
{"cell_type":"code","end":1633299438986,"exec_count":23,"id":"7d59bd","input":"first = \"Joseph\"\nlast = \"Yun\"\nstate = \"Maryland\"\nhobby = \"AI!\"\ninstrument=\"cello\"\nyear = 1500","kernel":"python3-ubuntu","pos":44,"start":1633299438980,"state":"done","type":"cell"}
{"cell_type":"code","end":1633299524608,"exec_count":30,"id":"580863","input":"# Formatting numbers\nf'My name is {last_name}, {first_name} {last_name}. I was born in {year_birth:6d}, my favorite number is {favorite_number:.30f}'","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'My name is Bond, James Bond. I was born in   1980, my favorite number is 3.141592653589793115997963468544'"},"exec_count":30}},"pos":43,"start":1633299524601,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":1,"id":"185b84","input":"# Single quote\nstring_1 ='string value'","metadata":{"pycharm":{"name":"#%%\n"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"fd5046","input":"string_1[6] = '*'","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"ename":"TypeError","evalue":"'str' object does not support item assignment","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_82929/4266268489.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mstring_1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'*'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'str' object does not support item assignment"]}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"3b1471","input":"'a' + 'b' + 'c' # Concatenation","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'abc'"},"exec_count":11,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"4524f2","input":"'a' * 4 # Duplication","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'aaaa'"},"exec_count":12,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"da45d0","input":"# Order from the variables matter, but you can change it inside the string. \nquote = 'My name is {2}, {3} {2}. I was born in {1}, my favorite number is {0}. {0} {1} {2} {3}'\nquote.format(\n    favorite_number, # 0\n    year_birth, # 1\n    last_name, # 2\n    first_name # 3\n)","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'My name is Bond, James Bond. I was born in 1980, my favorite number is 3.141592653589793. 3.141592653589793 1980 Bond James'"},"exec_count":12}},"pos":41,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":13,"id":"d28125","input":"multirow = 'Things that I like in python:\\n    - syntax;\\n    - power.\\n'\nprint(multirow)","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"Things that I like in python:\n    - syntax;\n    - power.\n\n"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"ae63ab","input":"multirow = \"\"\"Things that I like in python:\n    - syntax;\n    - power.\n\"\"\"\nprint(multirow)","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"Things that I like in python:\n    - syntax;\n    - power.\n\n"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"82f89e","input":"find_str = \"find something inside\"","metadata":{"pycharm":{"name":"#%%\n"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"662ad5","input":"'inside' in find_str","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"True"},"exec_count":16,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"ee85c6","input":"find_str.find('s')","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"5"},"exec_count":17,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"e19e6d","input":"print(multirow.replace('syntax', \"it's nice\"))","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"Things that I like in python:\n    - it's nice;\n    - power.\n\n"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"83aab0","input":"f'{first} {state}'","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"'Joseph, Maryland'"},"exec_count":19}},"pos":45,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":2,"id":"91c0ed","input":"# Double quote\nstring_2 =\"string value\"","metadata":{"pycharm":{"name":"#%%\n"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"b8430d","input":"# Parameters are inside a tuple structure. We will see this data type later\n'My name is %s, %s %s. I was born in %d, my favorite number is %f' % (last_name, first_name, last_name, year_birth, favorite_number)","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'My name is Bond, James Bond. I was born in 1980, my favorite number is 3.141593'"},"exec_count":29,"output_type":"execute_result"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"227261","input":"type(string_1)","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"str"},"exec_count":3,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"f4a33c","input":"'My favorite number is %05.1f' % (favorite_number, )","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'My favorite number is 003.1'"},"exec_count":30,"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"a0f316","input":"quote = 'My name is {lname}, {fname} {lname}. I was born in {year:6d}, my favorite number is {number:.6f}'\n\nquote.format(\n    lname=last_name,\n    fname=first_name,\n    year=year_birth,\n    number=favorite_number\n)","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'My name is Bond, James Bond. I was born in   1980, my favorite number is 3.141593'"},"exec_count":31,"output_type":"execute_result"}},"pos":39,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"b93abd","input":"string_1[0]  # get the first element of the string","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'s'"},"exec_count":4,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"366cbb","input":"len(string_1)  # get the length of the string","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"12"},"exec_count":5,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"c0aba8","input":"string_1[-1]  # get the last element of the string","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'e'"},"exec_count":6,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"c9d9c8","input":"# Slicing\nstring_1[2:5]  # get the last element of the string","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'rin'"},"exec_count":7,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"8ae653","input":"string_1 = 'string value'","metadata":{"pycharm":{"name":"#%%\n"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"734b68","input":"# Space character\nstring_1[6]","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"' '"},"exec_count":9,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"markdown","id":"035c29","input":"Another way is by using triple double quotes (\"\"\" \"\"\").","pos":20,"type":"cell"}
{"cell_type":"markdown","id":"08ad74","input":"## Multirow strings","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"169300","input":"### Formatting 3: using f-strings","pos":42,"type":"cell"}
{"cell_type":"markdown","id":"1b9b1b","input":"# String Types","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"26d3c4","input":"### Formatting 2: Using the \"format\" method","pos":38,"type":"cell"}
{"cell_type":"markdown","id":"51a1a7","input":"### Formatting 1: C-style","pos":35,"type":"cell"}
{"cell_type":"markdown","id":"55aec3","input":"## Mathematical operations: Concatenation and duplication","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"977f81","input":"## Modifying characters\nElements in a string are not modifiable by changing them directly.","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"9bb2de","input":"## Some functions","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"a50cd3","input":"Let's try changing the space character:","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"ac5498","input":"## String Format\n\nConcatenations between strings and other data types is not handled.","pos":32,"type":"cell"}
{"cell_type":"markdown","id":"d69ff3","input":"## Accessing to characters\n\nIn Python, a string can be seen as a list of characters; the first element of a list index is the position 0.\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"d82923","input":"Add the character \"\\n\" inside the string","pos":18,"type":"cell"}
{"end":1633299441903,"exec_count":24,"id":"444579","input":"f'Hi, my name is {first} {last}. I live in {state}, and my hobbies are playing the {instrument} and doing {hobby}. I was not born in {year:15d}'","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"'Hi, my name is Joseph Yun. I live in Maryland, and my hobbies are playing the cello and doing AI!. I was not born in            1500'"},"exec_count":24}},"pos":46,"start":1633299441897,"state":"done","type":"cell"}
{"id":"c34a0c","input":"","pos":11.5,"type":"cell"}
{"id":"e5bb1e","input":"","pos":47,"type":"cell"}
{"id":0,"time":1633298726726,"type":"user"}
{"last_load":1632693204820,"type":"file"}
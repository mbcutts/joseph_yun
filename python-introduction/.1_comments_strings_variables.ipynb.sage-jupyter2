{"backend_state":"init","kernel":"python3-ubuntu","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"trust":false,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"632b05","input":"","pos":38,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"031018","input":"# Single-line comment: using #\n\nprint('Hello world') # I can also write a comment after a command","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"Hello world\n"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"2ed7ea","input":"zero$ = 0 # Error","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (538433817.py, line 1)","output_type":"error","traceback":["\u001b[0;36m  File \u001b[0;32m\"/tmp/ipykernel_82769/538433817.py\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    zero$ = 0 # Error\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"8f7283","input":"üçâ = 0 # Error","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"ename":"SyntaxError","evalue":"invalid character in identifier (1676262085.py, line 1)","output_type":"error","traceback":["\u001b[0;36m  File \u001b[0;32m\"/tmp/ipykernel_82769/1676262085.py\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    üçâ = 0 # Error\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid character in identifier\n"]}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"0916b3","input":"Œîx = 0 # Valid","metadata":{"pycharm":{"name":"#%%\n"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"be4749","input":"œÄ = 3.14","metadata":{"pycharm":{"name":"#%%\n"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"b54e5d","input":"age = 10","metadata":{"pycharm":{"name":"#%%\n"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"0534ec","input":"Age = 12","metadata":{"pycharm":{"name":"#%%\n"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"d890cf","input":"AGE = 15","metadata":{"pycharm":{"name":"#%%\n"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"692e86","input":"age","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"10"},"exec_count":17,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"33a049","input":"Age","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"12"},"exec_count":18,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"f70114","input":"AGE","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"15"},"exec_count":19,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"7cbedf","input":"\"\"\"\nMulti-line comment: using \"\"\" \"\"\"\n\nThis line will print 'Hello world' in screen,\nbecause we are pretty awesome!\n\"\"\"\nprint('Hello world')\n","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"Hello world\n"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"d7e94e","input":"two, three, four = 2, 3, 4","metadata":{"pycharm":{"name":"#%%\n"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"907836","input":"print(four, three)","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"4 3\n"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"cb4b80","input":"a = b = c = 1","metadata":{"pycharm":{"name":"#%%\n"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"38fd2e","input":"a","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"1"},"exec_count":23,"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"5703a0","input":"b","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"1"},"exec_count":24,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"b91c13","input":"c\n","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"1"},"exec_count":25,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"e24441","input":"# Implicit typing\none = 1","metadata":{"pycharm":{"name":"#%%\n"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"c2ef0b","input":"# Declaring typing\none: int\none = 2.5","metadata":{"pycharm":{"name":"#%%\n"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"0ec7da","input":"# Declaring typing and value\none: int = 1\n\n","metadata":{"pycharm":{"name":"#%%\n"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"847274","input":"'string value'","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'string value'"},"exec_count":3,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"f89bf3","input":"# Count the number of 'i's in the string\nstring_var = 'This is an introduction to Python'\nstring_var.count('i')\n","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"4"},"exec_count":30,"output_type":"execute_result"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"8874d6","input":"# Create a list and append an element\nlist_var = ['cat', 'dog', 'alligator']\nlist_var.append('bird')","metadata":{"pycharm":{"name":"#%%\n"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"8ff71a","input":"type('string value')","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"str"},"exec_count":4,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"c89914","input":"type(1)","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"int"},"exec_count":5,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"d8548d","input":"type(1.0)","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"float"},"exec_count":6,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"56bfad","input":"one = 1","metadata":{"pycharm":{"name":"#%%\n"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"73542b","input":"_zero_ = 0 # Valid","metadata":{"pycharm":{"name":"#%%\n"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"ac43d0","input":"0zero = 0 # Error","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (2001652634.py, line 1)","output_type":"error","traceback":["\u001b[0;36m  File \u001b[0;32m\"/tmp/ipykernel_82769/2001652634.py\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    0zero = 0 # Error\u001b[0m\n\u001b[0m     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":12,"type":"cell"}
{"cell_type":"markdown","id":"1c8688","input":"### Variable naming rules\n- A variable name must start with a letter or the underscore character\n- A variable name cannot start with a number\n- A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )\n- Variable names are case-sensitive (age, Age and AGE are three different variables)\n","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"734d36","input":"### Accessing to properties and methods\nData types have different methods and properties.\n","pos":35,"type":"cell"}
{"cell_type":"markdown","id":"7b1209","input":"## Declaring variables\nVariables are containers for storing data values.\nYou can think to a variable like a label, you can assign a label to different things.","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"9c4061","input":"## Comments\nComments are useful to:\n- Explain what a piece of code does\n- To make the code more readable\n- To avoid executing a command or series of commands when debugging","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"9cf817","input":"You can also assign more than one variable at the same time:","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"aaf2a5","input":"### Type Annotation\nIn some programming languages, whenever you declare a variable it is necessary to specify the data type.\nEven if Python provides dynamic typing, it is possible to specify the possible data type by using typing annotations.","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"e2806b","input":"Or assign the same value to different variables:","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"e90887","input":"## Dynamic typing\nData type is implicitly recognized when declaring it.","pos":3,"type":"cell"}
{"id":0,"time":1631485962228,"type":"user"}
{"last_load":1631485964324,"type":"file"}
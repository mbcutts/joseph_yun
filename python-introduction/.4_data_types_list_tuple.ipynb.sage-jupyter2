{"backend_state":"running","connection_file":"/projects/f5f38597-12ca-4603-94d4-a86293c3f1cc/.local/share/jupyter/runtime/kernel-e2bd866e-28b2-4131-9148-235d32c79c6d.json","kernel":"python3-ubuntu","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1632696322576,"exec_count":70,"id":"958ff2","input":"empty_list = []","kernel":"python3-ubuntu","pos":1,"start":1632696322569,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322586,"exec_count":71,"id":"4ff231","input":"list1 = [\"a\",\"b\",\"c\",\"d\",\"e\"]","kernel":"python3-ubuntu","pos":2,"start":1632696322584,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322598,"exec_count":72,"id":"8cb684","input":"list1","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"['a', 'b', 'c', 'd', 'e']"},"exec_count":72}},"pos":3,"start":1632696322594,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322608,"exec_count":73,"id":"e3cdce","input":"print(list1)","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"['a', 'b', 'c', 'd', 'e']\n"}},"pos":4,"start":1632696322603,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322618,"exec_count":74,"id":"0a430b","input":"list2 = [1,2,3,4,5]","kernel":"python3-ubuntu","pos":5,"start":1632696322613,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322629,"exec_count":75,"id":"7b1ac5","input":"list2\nlist2[3]","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"4"},"exec_count":75}},"pos":6,"start":1632696322625,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322638,"exec_count":76,"id":"defe07","input":"list_one = [\"a\", \"b\", \"c\", [1, 2, 3], 3.5, True, False, \"d\"]","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":7,"start":1632696322635,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322648,"exec_count":77,"id":"1cf172","input":"animals = ['dog', 'cat', 'turtle', 'dog']\n# Get second element of list\nanimals[2]","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'turtle'"},"exec_count":77}},"pos":10,"start":1632696322645,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322658,"exec_count":78,"id":"f73771","input":"list_1 = [1, 2, 3, 4, 5, 6, \"a\",\"b\",\"c\",\"d\",\"e\"]","kernel":"python3-ubuntu","pos":12,"start":1632696322654,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322669,"exec_count":79,"id":"aa8403","input":"list_1[2:8] # start=2, stop=8, goes from 2 to 7 -- change this one to get me a b c d e","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"[3, 4, 5, 6, 'a', 'b']"},"exec_count":79}},"pos":13,"start":1632696322665,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322685,"exec_count":80,"id":"9325bc","input":"list_1[::3] # step=3\n","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"[1, 4, 'a', 'd']"},"exec_count":80}},"pos":14,"start":1632696322674,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322696,"exec_count":81,"id":"fb232f","input":"#starts at 2 (index 1)\n# -5 will mean: \"five elements behind the end of the list\" (6)\n# 2 is step size\nmylist = list_1[1:-5:2]\nmy_other_list = list_1[1:6:2]\nmylist == my_other_list\nlist_1[1:-5:2] == list_1[1:6:2]","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"True"},"exec_count":81}},"pos":15,"start":1632696322691,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322727,"exec_count":84,"id":"b22c16","input":"# How many times an element is in the list -change this for cat\nanimals.count(\"cat\")","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"3"},"exec_count":84}},"pos":19,"start":1632696322721,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322736,"exec_count":85,"id":"e29b87","input":"# Length of the list\nlen(animals)","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"9"},"exec_count":85}},"pos":20,"start":1632696322732,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322747,"exec_count":86,"id":"8a6750","input":"# Add an element at the end of the list\nanimals.append('cow')\nanimals","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['dog',\n 'cat',\n 'turtle',\n 'dog',\n 'cat',\n 'turtle',\n 'turtle',\n 'squirrel',\n 'cat',\n 'cow']"},"exec_count":86}},"pos":22,"start":1632696322744,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322756,"exec_count":87,"id":"b9a6c9","input":"reptiles = ['snake', 'crocodile']","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":23,"start":1632696322754,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322767,"exec_count":88,"id":"e1cf70","input":"# Create a new list by extending it\nanimals + reptiles\n","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['dog',\n 'cat',\n 'turtle',\n 'dog',\n 'cat',\n 'turtle',\n 'turtle',\n 'squirrel',\n 'cat',\n 'cow',\n 'snake',\n 'crocodile']"},"exec_count":88}},"pos":24,"start":1632696322763,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322776,"exec_count":89,"id":"82c40a","input":"# Content of list does not change\nanimals","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['dog',\n 'cat',\n 'turtle',\n 'dog',\n 'cat',\n 'turtle',\n 'turtle',\n 'squirrel',\n 'cat',\n 'cow']"},"exec_count":89}},"pos":25,"start":1632696322772,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322785,"exec_count":90,"id":"7f3fb6","input":"# Extend list with another one at the end\nanimals.extend(reptiles)","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":26,"start":1632696322781,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322795,"exec_count":91,"id":"8aea63","input":"# Content of list changes after extending it\nanimals","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['dog',\n 'cat',\n 'turtle',\n 'dog',\n 'cat',\n 'turtle',\n 'turtle',\n 'squirrel',\n 'cat',\n 'cow',\n 'snake',\n 'crocodile']"},"exec_count":91}},"pos":27,"start":1632696322791,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322805,"exec_count":92,"id":"30da2f","input":"# Adding an element in a specific position on list\nanimals.insert(1, 'bird')\nanimals","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['dog',\n 'bird',\n 'cat',\n 'turtle',\n 'dog',\n 'cat',\n 'turtle',\n 'turtle',\n 'squirrel',\n 'cat',\n 'cow',\n 'snake',\n 'crocodile']"},"exec_count":92}},"pos":28,"start":1632696322801,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322826,"exec_count":93,"id":"9e387b","input":"# Modifying an element inside a list inside a list\nanimals[1] = 'dove'","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":30,"start":1632696322811,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322837,"exec_count":94,"id":"662118","input":"animals","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['dog',\n 'dove',\n 'cat',\n 'turtle',\n 'dog',\n 'cat',\n 'turtle',\n 'turtle',\n 'squirrel',\n 'cat',\n 'cow',\n 'snake',\n 'crocodile']"},"exec_count":94}},"pos":31,"start":1632696322833,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322848,"exec_count":95,"id":"5fb7c2","input":"# Get last element of list and remove it from list\nanimals.pop()","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'crocodile'"},"exec_count":95}},"pos":33,"start":1632696322842,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322868,"exec_count":96,"id":"4d38d3","input":"animals","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['dog',\n 'dove',\n 'cat',\n 'turtle',\n 'dog',\n 'cat',\n 'turtle',\n 'turtle',\n 'squirrel',\n 'cat',\n 'cow',\n 'snake']"},"exec_count":96}},"pos":34,"start":1632696322854,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322879,"exec_count":97,"id":"e7a9bf","input":"# Remove the first occurence of an element on list\nanimals.remove('dog')\nanimals","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"['dove',\n 'cat',\n 'turtle',\n 'dog',\n 'cat',\n 'turtle',\n 'turtle',\n 'squirrel',\n 'cat',\n 'cow',\n 'snake']"},"exec_count":97}},"pos":35,"start":1632696322875,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322915,"exec_count":101,"id":"cde0d4","input":"# Accessing elements\nfruits[2]","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"'apple'"},"exec_count":101}},"pos":42,"start":1632696322912,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322925,"exec_count":102,"id":"2af434","input":"# Slicing\nfruits[1:4]\n","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"('banana', 'apple', 'mango')"},"exec_count":102}},"pos":43,"start":1632696322921,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322934,"exec_count":103,"id":"efc45e","input":"# Get index position of an element\nfruits.index('mango')","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"3"},"exec_count":103}},"pos":44,"start":1632696322930,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322944,"exec_count":104,"id":"0aa915","input":"# Check if an element is in a tuple\n'pear' in fruits","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"False"},"exec_count":104}},"pos":45,"start":1632696322940,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696322966,"exec_count":105,"id":"572e8f","input":"fruits[1] = 'pear'","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"ename":"TypeError","evalue":"'tuple' object does not support item assignment","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_442228/3984147987.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfruits\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'pear'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'tuple' object does not support item assignment"]}},"pos":47,"start":1632696322952,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696373533,"exec_count":106,"id":"78ee08","input":"animals = ['dog', 'cat', 'turtle', 'dog', 'cat', 'turtle', 'turtle', 'squirrel', 'cat']","kernel":"python3-ubuntu","pos":17,"start":1632696373528,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696376885,"exec_count":107,"id":"b0c9cd","input":"# Get index position of an element\nanimals.index('cat')","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"1"},"exec_count":107}},"pos":18,"start":1632696376878,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696523327,"exec_count":108,"id":"8742b3","input":"# Accessing an element in matrix\nmatrix_1[1][2] #access by rows and columns. first is row, second is column\n","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"5.12"},"exec_count":108}},"pos":39,"start":1632696523320,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696689202,"exec_count":109,"id":"cc3bfd","input":"del fruits[1]","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"ename":"TypeError","evalue":"'tuple' object doesn't support item deletion","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_442228/2163259285.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mdel\u001b[0m \u001b[0mfruits\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'tuple' object doesn't support item deletion"]}},"pos":48,"start":1632696689193,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696931583,"exec_count":115,"id":"b90974","input":"# A list gives the idea of changeability\nbook_author_list = ['Resto qui', 'Marco Balzano']\n\n# This is a fact, it shouldn't change\nbook_author_tuple = ('Resto qui', 'Marco Balzano')","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":52,"start":1632696931577,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696933680,"exec_count":116,"id":"4ed46c","input":"\"The book '%s' was written by %s\" % book_author_list","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"ename":"TypeError","evalue":"not enough arguments for format string","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_442228/951238190.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m\"The book '%s' was written by %s\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mbook_author_list\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: not enough arguments for format string"]}},"pos":53,"start":1632696933669,"state":"done","type":"cell"}
{"cell_type":"code","end":1632696954264,"exec_count":117,"id":"a2fd3c","input":"\"The book '%s' was written by %s\" % book_author_tuple","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"\"The book 'Resto qui' was written by Marco Balzano\""},"exec_count":117}},"pos":54,"start":1632696954256,"state":"done","type":"cell"}
{"cell_type":"code","end":1632697076132,"exec_count":120,"id":"2ea73e","input":"\"%s had a great lesson with %s on %s\" % (\"I\", \"Joseph\", \"Sunday\")","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"'I had a great lesson with Joseph on Sunday'"},"exec_count":120}},"pos":55,"start":1632697076125,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":100,"id":"023761","input":"#immutable. It cannot be directly changed, you will have to make a copy to change it. \n\nfruits = (\n    'kiwi',\n    'banana',\n    'apple',\n    'mango',\n    'peach',\n    'kiwi',\n    'kiwi',\n    'banana',\n    'avocado',\n    'tomato'\n)\n#fruits = ('kiwi','banana', 'apple', ....)\n\n","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":41,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":113,"id":"682b6f","input":"# Each tuple in this list contains latitude, longitude values\ncoordinates = [\n    (45.4, 12.2),\n    (29.2, 7.98),\n    (12.4, -12.8)\n]\n","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"output":{"0":{"data":{"text/plain":"list"},"exec_count":112}},"pos":50,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":98,"id":"a63374","input":"matrix_1 = [\n    [0.5, 1.2, 2.4],\n    [3.6, 4.76, 5.12]\n]","kernel":"python3-ubuntu","metadata":{"pycharm":{"name":"#%%\n"}},"pos":38,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"01f332","input":"### Modifying list\n\n#### Adding elements","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"1954a5","input":"## Accessing to elements","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"21885f","input":"#### Removing elements","pos":32,"type":"cell"}
{"cell_type":"markdown","id":"3de515","input":"### Checking elements","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"4fb792","input":"### Simulate a matrix\nIn Python, a matrix is simply a list of lists.\n","pos":37,"type":"cell"}
{"cell_type":"markdown","id":"660764","input":"- For some functions, tuples are required","pos":51,"type":"cell"}
{"cell_type":"markdown","id":"687d4c","input":"We could do the same thing with lists, right?","pos":36,"type":"cell"}
{"cell_type":"markdown","id":"6d0d80","input":"### Slicing\nUse \":\" to slice a string, defining: start, stop, and step.\n","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"88d872","input":"# Tuple\nA tuple is a collection which is **ordered**, but it is **immutable**.\n\n```python\n# Use () (rounded brackets) to create a tuple\ntuple_variable = (\n    'element_1',\n    'element_2',\n    '...'\n)\n```","pos":40,"type":"cell"}
{"cell_type":"markdown","id":"8bc631","input":"#### Modifying elements","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"9caf44","input":"Each item in the list has an index.  By using a list index you can represent each item in a list. In Python, the index starts at 0, so to get the first item, we would call index 0.","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"d355c7","input":"# Tuples vs Lists\nAt first sight, tuples and lists seem like interchangeable data types. But they are not!\n\n- Behind a tuple lays down the idea of a piece of data that is not going to change\n- A tuple can be seen as a container of the same data values\n- If stored inside a list, they are more readable\n- A tuple occupies less space in memory -> more performant data type (noticeable on huge number of elements)","pos":49,"type":"cell"}
{"cell_type":"markdown","id":"d8f6f5","input":"Except that, once a tuple is created, its content cannot be modified.","pos":46,"type":"cell"}
{"cell_type":"markdown","id":"ff18f3","input":"# List\nA list is a collection of elements, which are **ordered** and are **mutable**. Elements can be repeated inside a list.\n\n\n```python\n# Use [] (squared brackets) to create a list\nlist_variable = [\n    'element_1',\n    'element_2',\n    '...'\n]\n```","pos":0,"type":"cell"}
{"id":"58fa36","input":"","pos":15.5,"type":"cell"}
{"id":"c5842e","input":"","kernel":"python3-ubuntu","pos":7.5,"type":"cell"}
{"id":"e3be38","input":"","pos":56,"type":"cell"}
{"id":0,"time":1632695294308,"type":"user"}
{"last_load":1632695290619,"type":"file"}